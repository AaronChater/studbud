{"mappings":"AAMA,MAAMA,KAAOC,SAASC,eAAe,YAC/BC,OAASF,SAASG,cAAc,sBAChCC,SAAWJ,SAASC,eAAe,YACnCI,UAAYL,SAASC,eAAe,aAI1CC,OAAOI,iBAAiB,SAAS,SAASC,GACxCA,EAAMC,iBAGN,IAAIC,EAAOJ,UAAUK,MACnBC,EAAUC,aAAaF,MAErBG,EAAgBC,mBAAmBJ,MACnCK,EAAiBC,cAAcC,QAAQD,cAAcE,eAAeR,OAG5D,IAAIS,MAAQC,mBAAmB,SAMzCC,QAAQZ,EAAME,EAASE,EAAeE,GAExCO,QAAQC,IAAIC,aAId,IAAIA,SAAW,GAEf,SAASH,QAAQI,EAAiBC,EAAab,EAAeE,EAAgBY,GAC5E,IAAIlB,EAAO,CACTgB,gBAAAA,EACAC,YAAAA,EACAb,cAAAA,EACAE,eAAAA,EACAY,iBAAAA,GAIFH,SAASI,KAAKnB,GAGdoB,WAAWpB,GAKb,SAASoB,WAAWpB,GAClB,IAAIqB,EAAO9B,SAAS+B,cAAc,MAClCD,EAAKE,UAAW,MAAQvB,EAAKgB,gBAAb,qBACahB,EAAKiB,YADlB,4BAEoBjB,EAAKI,cAFzB,sBAGcJ,EAAKM,eAAgB,OAEnDX,SAAS6B,YAAYH,GAGrB,IAAII,EAAYlC,SAAS+B,cAAc,UACnCI,EAAgBnC,SAASoC,eAAe,aAC5CF,EAAUD,YAAYE,GACtBL,EAAKG,YAAYC,GAGjBA,EAAU5B,iBAAiB,SAAS,SAASC,GAC3CuB,EAAKO,YAKPtC,KAAKuC","sources":["public/script.js"],"sourcesContent":["\n\n\n//javascript for task list\n//code from week 5 interactive task list\n// Setting up variables for our HTML elements using DOM selection\nconst form = document.getElementById(\"taskform\");\nconst button = document.querySelector(\"#taskform > button\"); // Complex CSS query\nconst tasklist = document.getElementById(\"tasklist\");\nconst taskInput = document.getElementById(\"taskInput\");\n\n// Event listener for Button click\n// This could also be form.addEventListener(\"submit\", function() {...} )\nbutton.addEventListener(\"click\", function(event) {\n  event.preventDefault(); // Not as necessary for button, but needed for form submit\n\n  //let task = form.elements.task.value; // could be swapped out for line below\n  let task = taskInput.value;\nlet dueDate = dueDateInput.value;\n\n  let estimatedTime = estimatedTimeInput.value;\n  let priorityRating = priorityInput.options[priorityInput.selectedIndex].value;\n\n\n  let date = (new Date()).toLocaleDateString('en-US') //Convert to short date format\n\n  // Call the addTask() function using\n  //addTask(task, date, \"26/03/2021\", \"Low\", [\"1\", \"30\"], false);\n\n\n    addTask(task, dueDate, estimatedTime, priorityRating);\n  // Log out the newly populated taskList everytime the button has been pressed\n  console.log(taskList);\n})\n\n// Create an empty array to store our tasks\nvar taskList = [];\n\nfunction addTask(taskDescription, createdDate, estimatedTime, priorityRating, completionStatus) {\n  let task = {\n    taskDescription,\n    createdDate,\n    estimatedTime,\n    priorityRating,\n    completionStatus\n  };\n\n  // Add the task to our array of tasks\n  taskList.push(task);\n\n  // Separate the DOM manipulation from the object creation logic\n  renderTask(task);\n}\n\n\n// Function to display the item on the page\nfunction renderTask(task) {\n  let item = document.createElement(\"li\");\n  item.innerHTML =\"<p>\" + task.taskDescription +\"</p>\"\n     + \"<p>\" + \"DueDate:   \" + task.createdDate +\"</p>\"\n    + \"<p>\" + \"Estimated time:   \"  + task.estimatedTime +\"</p>\"\n    + \"<p>\"  + \"Priority:   \" + task.priorityRating +\"</p>\";\n\n  tasklist.appendChild(item);\n\n  // Setup delete button DOM elements\n  let delButton = document.createElement(\"button\");\n  let delButtonText = document.createTextNode(\"Completed\");\n  delButton.appendChild(delButtonText);\n  item.appendChild(delButton); // Adds a delete button to every task\n\n  // Listen for when the \n  delButton.addEventListener(\"click\", function(event){\n    item.remove(); // Remove the task item from the page when button clicked\n    // Because we used 'let' to define the item, this will always delete the right element\n  })\n  \n  // Clear the value of the input once the task has been added to the page\n  form.reset();\n}\n\n\n\n"],"names":["form","document","getElementById","button","querySelector","tasklist","taskInput","addEventListener","event","preventDefault","task","value","dueDate","dueDateInput","estimatedTime","estimatedTimeInput","priorityRating","priorityInput","options","selectedIndex","Date","toLocaleDateString","addTask","console","log","taskList","taskDescription","createdDate","completionStatus","push","renderTask","item","createElement","innerHTML","appendChild","delButton","delButtonText","createTextNode","remove","reset"],"version":3,"file":"study-session.d289ad34.js.map"}