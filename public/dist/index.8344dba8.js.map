{"mappings":"AAEA,IAAIA,WAAaC,SAASC,qBAAqB,MAE/C,IAAKC,EAAI,EAAGA,EAAIH,WAAWI,OAAQD,IAAK,CACtC,IAAIE,KAAOJ,SAASK,cAAc,QAC9BC,IAAMN,SAASO,eAAe,KAClCH,KAAKI,UAAY,QACjBJ,KAAKK,YAAYH,KACjBP,WAAWG,GAAGO,YAAYL,MAI5B,IACIF,EADAQ,MAAQV,SAASW,uBAAuB,SAE5C,IAAKT,EAAI,EAAGA,EAAIQ,MAAMP,OAAQD,IAC5BQ,MAAMR,GAAGU,QAAU,WACPC,KAAKC,cACXC,MAAMC,QAAU,QAKxB,IAAIC,KAAOjB,SAASkB,cAAc,MAQlC,SAASC,aACP,IAAIC,EAAKpB,SAASK,cAAc,MAC5BgB,EAAarB,SAASsB,eAAe,WAAWC,MAChDC,EAAIxB,SAASO,eAAec,GAChCD,EAAGX,YAAYe,GACI,KAAfH,EACFI,MAAM,6BAENzB,SAASsB,eAAe,QAAQb,YAAYW,GAE9CpB,SAASsB,eAAe,WAAWC,MAAQ,GAE3C,IAAInB,EAAOJ,SAASK,cAAc,QAC9BC,EAAMN,SAASO,eAAe,KAKlC,IAJAH,EAAKI,UAAY,QACjBJ,EAAKK,YAAYH,GACjBc,EAAGX,YAAYL,GAEVF,EAAI,EAAGA,EAAIQ,MAAMP,OAAQD,IAC5BQ,MAAMR,GAAGU,QAAU,WACPC,KAAKC,cACXC,MAAMC,QAAU,QA5B1BC,KAAKS,iBAAiB,SAAS,SAASC,GACZ,OAAtBA,EAAGC,OAAOC,SACZF,EAAGC,OAAOE,UAAUC,OAAO,cAE5B,GAmCH,MAAMC,KAAOhC,SAASsB,eAAe,YAC/BW,OAASjC,SAASkB,cAAc,sBAChCgB,SAAWlC,SAASsB,eAAe,YACnCa,UAAYnC,SAASsB,eAAe,aAI1CW,OAAOP,iBAAiB,SAAS,SAASU,GACxCA,EAAMC,iBAQNC,QANWN,KAAKO,SAASC,KAAKjB,OAGlB,IAAIkB,MAAQC,mBAAmB,SAGvB,aAAc,MAAO,CAAC,IAAK,OAAO,GAGtDC,QAAQC,IAAIC,aAId,IAAIA,SAAW,GAEf,SAASP,QAAQQ,EAAiBC,EAAaC,EAASC,EAAgBC,EAAeC,GACrF,IAAIX,EAAO,CACTM,gBAAAA,EACAC,YAAAA,EACAC,QAAAA,EACAC,eAAAA,EACAC,cAAAA,EACAC,iBAAAA,GAIFN,SAASO,KAAKZ,GAGda,WAAWb,GAKb,SAASa,WAAWb,GAClB,IAAIc,EAAOtD,SAASK,cAAc,MAClCiD,EAAKC,UAAY,MAAQf,EAAKM,gBAAkB,OAEhDZ,SAASzB,YAAY6C,GAGrB,IAAIE,EAAYxD,SAASK,cAAc,UACnCoD,EAAgBzD,SAASO,eAAe,UAC5CiD,EAAU/C,YAAYgD,GACtBH,EAAK7C,YAAY+C,GAGjBA,EAAU9B,iBAAiB,SAAS,SAASU,GAC3CkB,EAAKI,YAKP1B,KAAK2B","sources":["public/script.js"],"sourcesContent":["//javascript for goal list//\n// Create a \"close\" button and append it to each list item\nvar myNodelist = document.getElementsByTagName(\"LI\");\nvar i;\nfor (i = 0; i < myNodelist.length; i++) {\n  var span = document.createElement(\"SPAN\");\n  var txt = document.createTextNode(\"\\u00D7\");\n  span.className = \"close\";\n  span.appendChild(txt);\n  myNodelist[i].appendChild(span);\n}\n\n// Click on a close button to hide the current list item\nvar close = document.getElementsByClassName(\"close\");\nvar i;\nfor (i = 0; i < close.length; i++) {\n  close[i].onclick = function() {\n    var div = this.parentElement;\n    div.style.display = \"none\";\n  }\n}\n\n// Add a \"checked\" symbol when clicking on a list item\nvar list = document.querySelector('ul');\nlist.addEventListener('click', function(ev) {\n  if (ev.target.tagName === 'LI') {\n    ev.target.classList.toggle('checked');\n  }\n}, false);\n\n// Create a new list item when clicking on the \"Add\" button\nfunction newElement() {\n  var li = document.createElement(\"li\");\n  var inputValue = document.getElementById(\"myInput\").value;\n  var t = document.createTextNode(inputValue);\n  li.appendChild(t);\n  if (inputValue === '') {\n    alert(\"You must write something!\");\n  } else {\n    document.getElementById(\"myUL\").appendChild(li);\n  }\n  document.getElementById(\"myInput\").value = \"\";\n\n  var span = document.createElement(\"SPAN\");\n  var txt = document.createTextNode(\"\\u00D7\");\n  span.className = \"close\";\n  span.appendChild(txt);\n  li.appendChild(span);\n\n  for (i = 0; i < close.length; i++) {\n    close[i].onclick = function() {\n      var div = this.parentElement;\n      div.style.display = \"none\";\n    }\n  }\n}\n\n\n\n\n//javascript for task list\n//code from week 5 interactive task list\n// Setting up variables for our HTML elements using DOM selection\nconst form = document.getElementById(\"taskform\");\nconst button = document.querySelector(\"#taskform > button\"); // Complex CSS query\nconst tasklist = document.getElementById(\"tasklist\");\nconst taskInput = document.getElementById(\"taskInput\");\n\n// Event listener for Button click\n// This could also be form.addEventListener(\"submit\", function() {...} )\nbutton.addEventListener(\"click\", function(event) {\n  event.preventDefault(); // Not as necessary for button, but needed for form submit\n\n  let task = form.elements.task.value; // could be swapped out for line below\n  //let task = taskInput.value;\n\n  let date = (new Date()).toLocaleDateString('en-US') //Convert to short date format\n\n  // Call the addTask() function using\n  addTask(task, date, \"26/03/2021\", \"Low\", [\"1\", \"30\"], false);\n\n  // Log out the newly populated taskList everytime the button has been pressed\n  console.log(taskList);\n})\n\n// Create an empty array to store our tasks\nvar taskList = [];\n\nfunction addTask(taskDescription, createdDate, dueDate, priorityRating, estimatedTime, completionStatus) {\n  let task = {\n    taskDescription,\n    createdDate,\n    dueDate,\n    priorityRating,\n    estimatedTime,\n    completionStatus\n  };\n\n  // Add the task to our array of tasks\n  taskList.push(task);\n\n  // Separate the DOM manipulation from the object creation logic\n  renderTask(task);\n}\n\n\n// Function to display the item on the page\nfunction renderTask(task) {\n  let item = document.createElement(\"li\");\n  item.innerHTML = \"<p>\" + task.taskDescription + \"</p>\";\n\n  tasklist.appendChild(item);\n\n  // Setup delete button DOM elements\n  let delButton = document.createElement(\"button\");\n  let delButtonText = document.createTextNode(\"Delete\");\n  delButton.appendChild(delButtonText);\n  item.appendChild(delButton); // Adds a delete button to every task\n\n  // Listen for when the \n  delButton.addEventListener(\"click\", function(event){\n    item.remove(); // Remove the task item from the page when button clicked\n    // Because we used 'let' to define the item, this will always delete the right element\n  })\n  \n  // Clear the value of the input once the task has been added to the page\n  form.reset();\n}\n"],"names":["myNodelist","document","getElementsByTagName","i","length","span","createElement","txt","createTextNode","className","appendChild","close","getElementsByClassName","onclick","this","parentElement","style","display","list","querySelector","newElement","li","inputValue","getElementById","value","t","alert","addEventListener","ev","target","tagName","classList","toggle","form","button","tasklist","taskInput","event","preventDefault","addTask","elements","task","Date","toLocaleDateString","console","log","taskList","taskDescription","createdDate","dueDate","priorityRating","estimatedTime","completionStatus","push","renderTask","item","innerHTML","delButton","delButtonText","remove","reset"],"version":3,"file":"index.8344dba8.js.map"}